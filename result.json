{
    "numFailedTestSuites": 5,
    "numFailedTests": 7,
    "numPassedTestSuites": 12,
    "numPassedTests": 70,
    "numPendingTestSuites": 0,
    "numPendingTests": 0,
    "numRuntimeErrorTestSuites": 3,
    "numTodoTests": 0,
    "numTotalTestSuites": 17,
    "numTotalTests": 77,
    "openHandles": [],
    "snapshot": {
        "added": 0,
        "didUpdate": false,
        "failure": false,
        "filesAdded": 0,
        "filesRemoved": 0,
        "filesRemovedList": [],
        "filesUnmatched": 0,
        "filesUpdated": 0,
        "matched": 0,
        "total": 0,
        "unchecked": 0,
        "uncheckedKeysByFile": [],
        "unmatched": 0,
        "updated": 0
    },
    "startTime": 1693732194334,
    "success": false,
    "testResults": [
        {
            "assertionResults": [
                {
                    "ancestorTitles": [
                        "reflection"
                    ],
                    "duration": 7,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "reflection should successfully resolve service dependency",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 1,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should successfully resolve service dependency"
                }
            ],
            "endTime": 1693732195563,
            "message": "",
            "name": "C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\dist\\utils\\tests\\depTest.test.js",
            "startTime": 1693732194979,
            "status": "passed",
            "summary": ""
        },
        {
            "assertionResults": [
                {
                    "ancestorTitles": [
                        "TranslationServiceError"
                    ],
                    "duration": 10,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "TranslationServiceError Should correctly unwrap errors",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 2,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "Should correctly unwrap errors"
                },
                {
                    "ancestorTitles": [
                        "TranslationServiceError"
                    ],
                    "duration": 0,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "TranslationServiceError axiosErr should have status code",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 1,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "axiosErr should have status code"
                },
                {
                    "ancestorTitles": [
                        "TranslationServiceError"
                    ],
                    "duration": 1,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "TranslationServiceError zodErr should exist",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 1,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "zodErr should exist"
                }
            ],
            "endTime": 1693732195652,
            "message": "",
            "name": "C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\dist\\features\\translation\\tests\\translationServiceError.test.js",
            "startTime": 1693732195002,
            "status": "passed",
            "summary": ""
        },
        {
            "assertionResults": [
                {
                    "ancestorTitles": [
                        "getExportsFromFilesInFolder"
                    ],
                    "duration": 14,
                    "failureDetails": [
                        {}
                    ],
                    "failureMessages": [
                        "Error: You need to run with a version of node that supports ES Modules in the VM API. See https://jestjs.io/docs/ecmascript-modules\n    at invariant (C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\node_modules\\jest-util\\build\\invariant.js:16:11)\n    at importModuleDynamically (C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\node_modules\\jest-runtime\\build\\index.js:1511:37)\n    at importModuleDynamicallyWrapper (node:internal/vm/module:438:21)\n    at importModuleDynamicallyCallback (node:internal/process/esm_loader:35:14)\n    at C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\src\\features\\fileParsing\\services\\fileParsingService.ts:170:39\n    at Array.map (<anonymous>)\n    at getExportsFromFolder (C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\src\\features\\fileParsing\\services\\fileParsingService.ts:170:25)\n    at descendToFolderThenGetExportsFromFolder (C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\src\\features\\fileParsing\\services\\fileParsingService.ts:123:29)\n    at Object.<anonymous> (C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\src\\features\\fileParsing\\tests\\fileParsingService.test.ts:29:64)\n    at Promise.then.completed (C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\node_modules\\jest-runner\\build\\testWorker.js:108:12)"
                    ],
                    "fullName": "getExportsFromFilesInFolder Given above folder structure should find at least one export",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "failed",
                    "title": "Given above folder structure should find at least one export"
                },
                {
                    "ancestorTitles": [
                        "getExportsFromFilesInFolder"
                    ],
                    "duration": 2,
                    "failureDetails": [
                        {}
                    ],
                    "failureMessages": [
                        "Error: You need to run with a version of node that supports ES Modules in the VM API. See https://jestjs.io/docs/ecmascript-modules\n    at invariant (C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\node_modules\\jest-util\\build\\invariant.js:16:11)\n    at importModuleDynamically (C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\node_modules\\jest-runtime\\build\\index.js:1511:37)\n    at importModuleDynamicallyWrapper (node:internal/vm/module:438:21)\n    at importModuleDynamicallyCallback (node:internal/process/esm_loader:35:14)\n    at C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\src\\features\\fileParsing\\services\\fileParsingService.ts:170:39\n    at Array.map (<anonymous>)\n    at getExportsFromFolder (C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\src\\features\\fileParsing\\services\\fileParsingService.ts:170:25)\n    at descendToFolderThenGetExportsFromFolder (C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\src\\features\\fileParsing\\services\\fileParsingService.ts:123:29)\n    at Object.<anonymous> (C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\src\\features\\fileParsing\\tests\\fileParsingService.test.ts:38:64)\n    at Promise.then.completed (C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\node_modules\\jest-runner\\build\\testWorker.js:108:12)"
                    ],
                    "fullName": "getExportsFromFilesInFolder Given above folder structure should find at least 2 exports",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "failed",
                    "title": "Given above folder structure should find at least 2 exports"
                },
                {
                    "ancestorTitles": [
                        "getExportsFromFilesInFolder"
                    ],
                    "duration": 4,
                    "failureDetails": [
                        {
                            "matcherResult": {
                                "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveLength\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected length: \u001b[32m1\u001b[39m\nReceived length: \u001b[31m0\u001b[39m\nReceived array:  \u001b[31m[]\u001b[39m",
                                "pass": false
                            }
                        }
                    ],
                    "failureMessages": [
                        "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveLength\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected length: \u001b[32m1\u001b[39m\nReceived length: \u001b[31m0\u001b[39m\nReceived array:  \u001b[31m[]\u001b[39m\n    at Object.<anonymous> (C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\src\\features\\fileParsing\\tests\\fileParsingService.test.ts:50:19)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"
                    ],
                    "fullName": "getExportsFromFilesInFolder Given above folder structure should be able to find testfile2.ts with first depth search",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 1,
                    "retryReasons": [],
                    "status": "failed",
                    "title": "Given above folder structure should be able to find testfile2.ts with first depth search"
                },
                {
                    "ancestorTitles": [
                        "getExportsFromFilesInFolder"
                    ],
                    "duration": 9,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "getExportsFromFilesInFolder should throw an error if the specified folder is not found",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 1,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should throw an error if the specified folder is not found"
                },
                {
                    "ancestorTitles": [
                        "getExportsFromFilesInFolder"
                    ],
                    "duration": 3,
                    "failureDetails": [
                        {}
                    ],
                    "failureMessages": [
                        "Error: You need to run with a version of node that supports ES Modules in the VM API. See https://jestjs.io/docs/ecmascript-modules\n    at invariant (C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\node_modules\\jest-util\\build\\invariant.js:16:11)\n    at importModuleDynamically (C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\node_modules\\jest-runtime\\build\\index.js:1511:37)\n    at importModuleDynamicallyWrapper (node:internal/vm/module:438:21)\n    at importModuleDynamicallyCallback (node:internal/process/esm_loader:35:14)\n    at C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\src\\features\\fileParsing\\services\\fileParsingService.ts:170:39\n    at Array.map (<anonymous>)\n    at getExportsFromFolder (C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\src\\features\\fileParsing\\services\\fileParsingService.ts:170:25)\n    at descendToFolderThenGetExportsFromFolder (C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\src\\features\\fileParsing\\services\\fileParsingService.ts:123:29)\n    at Object.<anonymous> (C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\src\\features\\fileParsing\\tests\\fileParsingService.test.ts:60:64)\n    at Promise.then.completed (C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\node_modules\\jest-runner\\build\\testWorker.js:108:12)"
                    ],
                    "fullName": "getExportsFromFilesInFolder Given above folder structure, should be able to locate the contents of testfile3.ts with recursive search",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "failed",
                    "title": "Given above folder structure, should be able to locate the contents of testfile3.ts with recursive search"
                },
                {
                    "ancestorTitles": [
                        "getExportsFromFilesInFolder"
                    ],
                    "duration": 2,
                    "failureDetails": [
                        {}
                    ],
                    "failureMessages": [
                        "Error: You need to run with a version of node that supports ES Modules in the VM API. See https://jestjs.io/docs/ecmascript-modules\n    at invariant (C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\node_modules\\jest-util\\build\\invariant.js:16:11)\n    at importModuleDynamically (C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\node_modules\\jest-runtime\\build\\index.js:1511:37)\n    at importModuleDynamicallyWrapper (node:internal/vm/module:438:21)\n    at importModuleDynamicallyCallback (node:internal/process/esm_loader:35:14)\n    at C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\src\\features\\fileParsing\\services\\fileParsingService.ts:170:39\n    at Array.map (<anonymous>)\n    at getExportsFromFolder (C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\src\\features\\fileParsing\\services\\fileParsingService.ts:170:25)\n    at descendToFolderThenGetExportsFromFolder (C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\src\\features\\fileParsing\\services\\fileParsingService.ts:123:29)\n    at Object.<anonymous> (C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\src\\features\\fileParsing\\tests\\fileParsingService.test.ts:70:64)\n    at Promise.then.completed (C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\node_modules\\jest-runner\\build\\testWorker.js:108:12)"
                    ],
                    "fullName": "getExportsFromFilesInFolder Given above folder structure should not be able to find the contents of testfile3.ts without recursion",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "failed",
                    "title": "Given above folder structure should not be able to find the contents of testfile3.ts without recursion"
                },
                {
                    "ancestorTitles": [
                        "goToAncestorFolder"
                    ],
                    "duration": 1,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "goToAncestorFolder should return the parent directory path of the given folder name",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 1,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should return the parent directory path of the given folder name"
                },
                {
                    "ancestorTitles": [
                        "goToAncestorFolder"
                    ],
                    "duration": 3,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "goToAncestorFolder should throw an error if the specified folder is not found",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 1,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should throw an error if the specified folder is not found"
                }
            ],
            "endTime": 1693732195701,
            "message": "\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mgetExportsFromFilesInFolder › Given above folder structure should find at least one export\u001b[39m\u001b[22m\n\n    You need to run with a version of node that supports ES Modules in the VM API. See https://jestjs.io/docs/ecmascript-modules\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 168 |\u001b[39m \t\t\u001b[33m?\u001b[39m traverser\u001b[33m.\u001b[39mrecursiveFindFiles(fileFilter)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 169 |\u001b[39m \t\t\u001b[33m:\u001b[39m traverser\u001b[33m.\u001b[39mgetFiles()\u001b[33m.\u001b[39mfilter(fileFilter)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 170 |\u001b[39m \t\u001b[36mreturn\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m.\u001b[39mall(res\u001b[33m.\u001b[39mmap((file) \u001b[33m=>\u001b[39m \u001b[36mimport\u001b[39m(file)))\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     |\u001b[39m \t                                     \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 171 |\u001b[39m }\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 172 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 173 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat invariant (\u001b[22m\u001b[2mnode_modules/jest-util/build/invariant.js\u001b[2m:16:11)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2msrc/features/fileParsing/services/fileParsingService.ts\u001b[2m:170:39\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at Array.map (<anonymous>)\u001b[22m\n\u001b[2m      \u001b[2mat getExportsFromFolder (\u001b[22m\u001b[2msrc/features/fileParsing/services/fileParsingService.ts\u001b[2m:170:25)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat descendToFolderThenGetExportsFromFolder (\u001b[22m\u001b[2msrc/features/fileParsing/services/fileParsingService.ts\u001b[2m:123:29)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/features/fileParsing/tests/fileParsingService.test.ts\u001b[39m\u001b[0m\u001b[2m:29:64)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mgetExportsFromFilesInFolder › Given above folder structure should find at least 2 exports\u001b[39m\u001b[22m\n\n    You need to run with a version of node that supports ES Modules in the VM API. See https://jestjs.io/docs/ecmascript-modules\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 168 |\u001b[39m \t\t\u001b[33m?\u001b[39m traverser\u001b[33m.\u001b[39mrecursiveFindFiles(fileFilter)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 169 |\u001b[39m \t\t\u001b[33m:\u001b[39m traverser\u001b[33m.\u001b[39mgetFiles()\u001b[33m.\u001b[39mfilter(fileFilter)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 170 |\u001b[39m \t\u001b[36mreturn\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m.\u001b[39mall(res\u001b[33m.\u001b[39mmap((file) \u001b[33m=>\u001b[39m \u001b[36mimport\u001b[39m(file)))\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     |\u001b[39m \t                                     \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 171 |\u001b[39m }\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 172 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 173 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat invariant (\u001b[22m\u001b[2mnode_modules/jest-util/build/invariant.js\u001b[2m:16:11)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2msrc/features/fileParsing/services/fileParsingService.ts\u001b[2m:170:39\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at Array.map (<anonymous>)\u001b[22m\n\u001b[2m      \u001b[2mat getExportsFromFolder (\u001b[22m\u001b[2msrc/features/fileParsing/services/fileParsingService.ts\u001b[2m:170:25)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat descendToFolderThenGetExportsFromFolder (\u001b[22m\u001b[2msrc/features/fileParsing/services/fileParsingService.ts\u001b[2m:123:29)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/features/fileParsing/tests/fileParsingService.test.ts\u001b[39m\u001b[0m\u001b[2m:38:64)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mgetExportsFromFilesInFolder › Given above folder structure should be able to find testfile2.ts with first depth search\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveLength\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected length: \u001b[32m1\u001b[39m\n    Received length: \u001b[31m0\u001b[39m\n    Received array:  \u001b[31m[]\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 48 |\u001b[39m \t\t})\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 49 |\u001b[39m \t\texpect(\u001b[33mArray\u001b[39m\u001b[33m.\u001b[39misArray(exports))\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 50 |\u001b[39m \t\texpect(exports)\u001b[33m.\u001b[39mtoHaveLength(\u001b[35m1\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    |\u001b[39m \t\t                \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 51 |\u001b[39m \t})\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 52 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 53 |\u001b[39m \tit(\u001b[32m\"should throw an error if the specified folder is not found\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/features/fileParsing/tests/fileParsingService.test.ts\u001b[39m\u001b[0m\u001b[2m:50:19)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mgetExportsFromFilesInFolder › Given above folder structure, should be able to locate the contents of testfile3.ts with recursive search\u001b[39m\u001b[22m\n\n    You need to run with a version of node that supports ES Modules in the VM API. See https://jestjs.io/docs/ecmascript-modules\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 168 |\u001b[39m \t\t\u001b[33m?\u001b[39m traverser\u001b[33m.\u001b[39mrecursiveFindFiles(fileFilter)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 169 |\u001b[39m \t\t\u001b[33m:\u001b[39m traverser\u001b[33m.\u001b[39mgetFiles()\u001b[33m.\u001b[39mfilter(fileFilter)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 170 |\u001b[39m \t\u001b[36mreturn\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m.\u001b[39mall(res\u001b[33m.\u001b[39mmap((file) \u001b[33m=>\u001b[39m \u001b[36mimport\u001b[39m(file)))\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     |\u001b[39m \t                                     \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 171 |\u001b[39m }\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 172 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 173 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat invariant (\u001b[22m\u001b[2mnode_modules/jest-util/build/invariant.js\u001b[2m:16:11)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2msrc/features/fileParsing/services/fileParsingService.ts\u001b[2m:170:39\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at Array.map (<anonymous>)\u001b[22m\n\u001b[2m      \u001b[2mat getExportsFromFolder (\u001b[22m\u001b[2msrc/features/fileParsing/services/fileParsingService.ts\u001b[2m:170:25)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat descendToFolderThenGetExportsFromFolder (\u001b[22m\u001b[2msrc/features/fileParsing/services/fileParsingService.ts\u001b[2m:123:29)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/features/fileParsing/tests/fileParsingService.test.ts\u001b[39m\u001b[0m\u001b[2m:60:64)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mgetExportsFromFilesInFolder › Given above folder structure should not be able to find the contents of testfile3.ts without recursion\u001b[39m\u001b[22m\n\n    You need to run with a version of node that supports ES Modules in the VM API. See https://jestjs.io/docs/ecmascript-modules\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 168 |\u001b[39m \t\t\u001b[33m?\u001b[39m traverser\u001b[33m.\u001b[39mrecursiveFindFiles(fileFilter)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 169 |\u001b[39m \t\t\u001b[33m:\u001b[39m traverser\u001b[33m.\u001b[39mgetFiles()\u001b[33m.\u001b[39mfilter(fileFilter)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 170 |\u001b[39m \t\u001b[36mreturn\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m.\u001b[39mall(res\u001b[33m.\u001b[39mmap((file) \u001b[33m=>\u001b[39m \u001b[36mimport\u001b[39m(file)))\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     |\u001b[39m \t                                     \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 171 |\u001b[39m }\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 172 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 173 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat invariant (\u001b[22m\u001b[2mnode_modules/jest-util/build/invariant.js\u001b[2m:16:11)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2msrc/features/fileParsing/services/fileParsingService.ts\u001b[2m:170:39\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at Array.map (<anonymous>)\u001b[22m\n\u001b[2m      \u001b[2mat getExportsFromFolder (\u001b[22m\u001b[2msrc/features/fileParsing/services/fileParsingService.ts\u001b[2m:170:25)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat descendToFolderThenGetExportsFromFolder (\u001b[22m\u001b[2msrc/features/fileParsing/services/fileParsingService.ts\u001b[2m:123:29)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/features/fileParsing/tests/fileParsingService.test.ts\u001b[39m\u001b[0m\u001b[2m:70:64)\u001b[22m\u001b[2m\u001b[22m\n",
            "name": "C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\dist\\features\\fileParsing\\tests\\fileParsingService.test.js",
            "startTime": 1693732195004,
            "status": "failed",
            "summary": ""
        },
        {
            "assertionResults": [
                {
                    "ancestorTitles": [
                        "DirectoryTraverser",
                        "descendTo"
                    ],
                    "duration": 9,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "DirectoryTraverser descendTo should return true if folder is found",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 1,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should return true if folder is found"
                },
                {
                    "ancestorTitles": [
                        "DirectoryTraverser",
                        "descendTo"
                    ],
                    "duration": 13,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "DirectoryTraverser descendTo should throw if folder is not found",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 1,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should throw if folder is not found"
                },
                {
                    "ancestorTitles": [
                        "DirectoryTraverser",
                        "descendTo"
                    ],
                    "duration": 4,
                    "failureDetails": [
                        {
                            "name": "TraverserError"
                        }
                    ],
                    "failureMessages": [
                        "TraverserError: Folder testfile3.ts not found in current directory\n    at DirectoryTraverser.descendTo (C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\src\\features\\fileParsing\\services\\directoryTraverser.ts:102:9)\n    at Object.<anonymous> (C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\src\\features\\fileParsing\\tests\\traverser.test.ts:28:29)\n    at Promise.then.completed (C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at _runTestsForDescribeBlock (C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\node_modules\\jest-runner\\build\\testWorker.js:108:12)"
                    ],
                    "fullName": "DirectoryTraverser descendTo should handle file types",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "failed",
                    "title": "should handle file types"
                },
                {
                    "ancestorTitles": [
                        "DirectoryTraverser",
                        "recursiveFindFiles"
                    ],
                    "duration": 2,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "DirectoryTraverser recursiveFindFiles should find all files matching the filter",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 1,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should find all files matching the filter"
                },
                {
                    "ancestorTitles": [
                        "DirectoryTraverser",
                        "recursiveFindFiles"
                    ],
                    "duration": 3,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "DirectoryTraverser recursiveFindFiles should return an empty array if no files match the filter",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 1,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should return an empty array if no files match the filter"
                },
                {
                    "ancestorTitles": [
                        "DirectoryTraverser",
                        "ascendTo"
                    ],
                    "duration": 0,
                    "failureDetails": [
                        {
                            "name": "TraverserError"
                        }
                    ],
                    "failureMessages": [
                        "TraverserError: Folder src not found in current directory\n    at DirectoryTraverser.ascendTo (C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\src\\features\\fileParsing\\services\\directoryTraverser.ts:63:10)\n    at Object.<anonymous> (C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\src\\features\\fileParsing\\tests\\traverser.test.ts:52:14)\n    at Promise.then.completed (C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at _runTestsForDescribeBlock (C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\node_modules\\jest-runner\\build\\testWorker.js:108:12)"
                    ],
                    "fullName": "DirectoryTraverser ascendTo should change the current directory to the specified folder",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "failed",
                    "title": "should change the current directory to the specified folder"
                },
                {
                    "ancestorTitles": [
                        "DirectoryTraverser",
                        "ascendTo"
                    ],
                    "duration": 1,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "DirectoryTraverser ascendTo should throw an error if the specified folder is not found",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 1,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should throw an error if the specified folder is not found"
                },
                {
                    "ancestorTitles": [
                        "DirectoryTraverser",
                        "currentDirectory"
                    ],
                    "duration": 1,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "DirectoryTraverser currentDirectory should set the current directory to the specified directory",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 1,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should set the current directory to the specified directory"
                },
                {
                    "ancestorTitles": [
                        "DirectoryTraverser",
                        "currentDirectory"
                    ],
                    "duration": 1,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "DirectoryTraverser currentDirectory should normalize the specified directory",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 1,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should normalize the specified directory"
                },
                {
                    "ancestorTitles": [
                        "DirectoryTraverser",
                        "currentDirectory"
                    ],
                    "duration": 0,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "DirectoryTraverser currentDirectory should set the current folder to the basename of the specified directory",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 1,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should set the current folder to the basename of the specified directory"
                },
                {
                    "ancestorTitles": [
                        "DirectoryTraverser",
                        "currentDirectory"
                    ],
                    "duration": 2,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "DirectoryTraverser currentDirectory should throw an error if the specified directory is invalid",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 1,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should throw an error if the specified directory is invalid"
                },
                {
                    "ancestorTitles": [
                        "DirectoryTraverser",
                        "goToDescendentFolder"
                    ],
                    "duration": 2,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "DirectoryTraverser goToDescendentFolder should return the path of the descendent folder",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 1,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should return the path of the descendent folder"
                },
                {
                    "ancestorTitles": [
                        "DirectoryTraverser",
                        "goToDescendentFolder"
                    ],
                    "duration": 5,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "DirectoryTraverser goToDescendentFolder should throw an error if the specified folder is not found",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 1,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should throw an error if the specified folder is not found"
                },
                {
                    "ancestorTitles": [
                        "DirectoryTraverser",
                        "goToDescendentFolder"
                    ],
                    "duration": 1,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "DirectoryTraverser goToDescendentFolder should throw an error if the starting directory does not exist",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 1,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should throw an error if the starting directory does not exist"
                }
            ],
            "endTime": 1693732195717,
            "message": "\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mDirectoryTraverser › descendTo › should handle file types\u001b[39m\u001b[22m\n\n    TraverserError: Folder testfile3.ts not found in current directory\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 100 |\u001b[39m \t\t\t}\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 101 |\u001b[39m \t\t}\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 102 |\u001b[39m \t\t\u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mTraverserError\u001b[39m(\u001b[32m`Folder ${itemName} not found in current directory`\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     |\u001b[39m \t\t      \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 103 |\u001b[39m \t}\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 104 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 105 |\u001b[39m \t\u001b[90m/**Returns true if should return, false if should continue. */\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat DirectoryTraverser.descendTo (\u001b[22m\u001b[2msrc/features/fileParsing/services/directoryTraverser.ts\u001b[2m:102:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/features/fileParsing/tests/traverser.test.ts\u001b[39m\u001b[0m\u001b[2m:28:29)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mDirectoryTraverser › ascendTo › should change the current directory to the specified folder\u001b[39m\u001b[22m\n\n    TraverserError: Folder src not found in current directory\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 61 |\u001b[39m \t\t\u001b[36mconst\u001b[39m index \u001b[33m=\u001b[39m parts\u001b[33m.\u001b[39mlastIndexOf(folderName)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 62 |\u001b[39m \t\t\u001b[36mif\u001b[39m (index \u001b[33m===\u001b[39m \u001b[33m-\u001b[39m\u001b[35m1\u001b[39m) {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 63 |\u001b[39m \t\t\t\u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mTraverserError\u001b[39m(\u001b[32m`Folder ${folderName} not found in current directory`\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    |\u001b[39m \t\t\t      \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 64 |\u001b[39m \t\t} \u001b[36melse\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 65 |\u001b[39m \t\t\t\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mcurrentDirectory \u001b[33m=\u001b[39m parts\u001b[33m.\u001b[39mslice(\u001b[35m0\u001b[39m\u001b[33m,\u001b[39m index \u001b[33m+\u001b[39m \u001b[35m1\u001b[39m)\u001b[33m.\u001b[39mjoin(path\u001b[33m.\u001b[39msep)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 66 |\u001b[39m \t\t}\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat DirectoryTraverser.ascendTo (\u001b[22m\u001b[2msrc/features/fileParsing/services/directoryTraverser.ts\u001b[2m:63:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/features/fileParsing/tests/traverser.test.ts\u001b[39m\u001b[0m\u001b[2m:52:14)\u001b[22m\u001b[2m\u001b[22m\n",
            "name": "C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\dist\\features\\fileParsing\\tests\\traverser.test.js",
            "startTime": 1693732195007,
            "status": "failed",
            "summary": ""
        },
        {
            "assertionResults": [],
            "coverage": {},
            "endTime": 1693732205506,
            "message": "  \u001b[1m● \u001b[22mTest suite failed to run\n\n    tsyringe requires a reflect polyfill. Please add 'import \"reflect-metadata\"' to the top of your entry point.\n\n    \u001b[0m \u001b[90m 1 |\u001b[39m \u001b[36mimport\u001b[39m { \u001b[33mTRANSLATION_MAX_USER_INPUT_CHARS\u001b[39m } \u001b[36mfrom\u001b[39m \u001b[32m\"../configs/languageConfig\"\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 2 |\u001b[39m \u001b[36mimport\u001b[39m { \u001b[33mTranslationService\u001b[39m } \u001b[36mfrom\u001b[39m \u001b[32m\"../services/translationService\"\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 3 |\u001b[39m \u001b[36mimport\u001b[39m { container } \u001b[36mfrom\u001b[39m \u001b[32m\"tsyringe\"\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m   |\u001b[39m \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 4 |\u001b[39m \u001b[36mimport\u001b[39m dotenv \u001b[36mfrom\u001b[39m \u001b[32m\"dotenv\"\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 5 |\u001b[39m \u001b[36mimport\u001b[39m { z } \u001b[36mfrom\u001b[39m \u001b[32m\"zod\"\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 6 |\u001b[39m\u001b[0m\n\n      \u001b[2mat Object.<anonymous> (\u001b[22mnode_modules/tsyringe/dist/cjs/index.js\u001b[2m:5:11)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[0m\u001b[36msrc/features/translation/tests/translationService.test.ts\u001b[39m\u001b[0m\u001b[2m:3:1)\u001b[22m\n",
            "name": "C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\dist\\features\\translation\\tests\\translationService.test.js",
            "startTime": 1693732205506,
            "status": "failed",
            "summary": ""
        },
        {
            "assertionResults": [
                {
                    "ancestorTitles": [
                        "country"
                    ],
                    "duration": 681,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "country should have return 10 records with take set to 10",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 2,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should have return 10 records with take set to 10"
                }
            ],
            "endTime": 1693732196282,
            "message": "",
            "name": "C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\dist\\db\\tests\\prisma.test.js",
            "startTime": 1693732195001,
            "status": "passed",
            "summary": ""
        },
        {
            "assertionResults": [
                {
                    "ancestorTitles": [
                        "Language Abbreviation Queries"
                    ],
                    "duration": 614,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "Language Abbreviation Queries should return a truthy value when searched by country name (optimized)",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 1,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should return a truthy value when searched by country name (optimized)"
                },
                {
                    "ancestorTitles": [
                        "Language Abbreviation Queries"
                    ],
                    "duration": 91,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "Language Abbreviation Queries should return a truthy value when searched by country name",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 1,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should return a truthy value when searched by country name"
                },
                {
                    "ancestorTitles": [
                        "Language Abbreviation Queries"
                    ],
                    "duration": 92,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "Language Abbreviation Queries should return a truthy value when searched by language name",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 1,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should return a truthy value when searched by language name"
                },
                {
                    "ancestorTitles": [
                        "Language Abbreviation Queries"
                    ],
                    "duration": 90,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "Language Abbreviation Queries should return a truthy value when searched by abbreviation",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 1,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should return a truthy value when searched by abbreviation"
                },
                {
                    "ancestorTitles": [
                        "Language Abbreviation Queries"
                    ],
                    "duration": 88,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "Language Abbreviation Queries should return a truthy value when searched by emoji",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 1,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should return a truthy value when searched by emoji"
                },
                {
                    "ancestorTitles": [
                        "Language Abbreviation Queries (Case Insensitive)"
                    ],
                    "duration": 47,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "Language Abbreviation Queries (Case Insensitive) should return a truthy value when searched by country name (optimized)",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 1,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should return a truthy value when searched by country name (optimized)"
                },
                {
                    "ancestorTitles": [
                        "Language Abbreviation Queries (Case Insensitive)"
                    ],
                    "duration": 59,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "Language Abbreviation Queries (Case Insensitive) should return a truthy value when searched by country name",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 1,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should return a truthy value when searched by country name"
                },
                {
                    "ancestorTitles": [
                        "Language Abbreviation Queries (Case Insensitive)"
                    ],
                    "duration": 55,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "Language Abbreviation Queries (Case Insensitive) should return a truthy value when searched by language name",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 1,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should return a truthy value when searched by language name"
                },
                {
                    "ancestorTitles": [
                        "Language Abbreviation Queries (Case Insensitive)"
                    ],
                    "duration": 44,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "Language Abbreviation Queries (Case Insensitive) should return a truthy value when searched by abbreviation",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 1,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should return a truthy value when searched by abbreviation"
                },
                {
                    "ancestorTitles": [
                        "Language Abbreviation Queries (Case Insensitive)"
                    ],
                    "duration": 45,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "Language Abbreviation Queries (Case Insensitive) should return a truthy value when searched by emoji",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 1,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should return a truthy value when searched by emoji"
                }
            ],
            "endTime": 1693732196818,
            "message": "",
            "name": "C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\dist\\features\\translation\\tests\\languageRepository.test.js",
            "startTime": 1693732194990,
            "status": "passed",
            "summary": ""
        },
        {
            "assertionResults": [
                {
                    "ancestorTitles": [
                        "kitchen sink test"
                    ],
                    "duration": 51,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "kitchen sink test see comments in test",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 5,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "see comments in test"
                },
                {
                    "ancestorTitles": [
                        "CooldownService",
                        "registerCommandCooldown"
                    ],
                    "duration": 2,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "CooldownService registerCommandCooldown should register the cooldown for a command",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 1,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should register the cooldown for a command"
                },
                {
                    "ancestorTitles": [
                        "CooldownService",
                        "processUserCooldown"
                    ],
                    "duration": 4,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "CooldownService processUserCooldown should return CooldownResult.asExpired() if the user is not on cooldown",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 1,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should return CooldownResult.asExpired() if the user is not on cooldown"
                },
                {
                    "ancestorTitles": [
                        "CooldownService",
                        "processUserCooldown"
                    ],
                    "duration": 11,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "CooldownService processUserCooldown should return the remaining cooldown time in seconds if the user is on cooldown",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 1,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should return the remaining cooldown time in seconds if the user is on cooldown"
                },
                {
                    "ancestorTitles": [
                        "CooldownService",
                        "getUsersOnCooldownForCommand"
                    ],
                    "duration": 4,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "CooldownService getUsersOnCooldownForCommand should return the cooldown events for a command",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 1,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should return the cooldown events for a command"
                }
            ],
            "endTime": 1693732197099,
            "message": "",
            "name": "C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\dist\\features\\cooldowns\\tests\\cooldownService.test.js",
            "startTime": 1693732195004,
            "status": "passed",
            "summary": ""
        },
        {
            "assertionResults": [
                {
                    "ancestorTitles": [
                        "basicTest"
                    ],
                    "duration": 8,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "basicTest basic",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 1,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "basic"
                }
            ],
            "endTime": 1693732198811,
            "message": "",
            "name": "C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\src\\utils\\tests\\basicTest.test.ts",
            "startTime": 1693732194995,
            "status": "passed",
            "summary": ""
        },
        {
            "assertionResults": [
                {
                    "ancestorTitles": [
                        "TranslationServiceError"
                    ],
                    "duration": 4,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "TranslationServiceError Should correctly unwrap errors",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 2,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "Should correctly unwrap errors"
                },
                {
                    "ancestorTitles": [
                        "TranslationServiceError"
                    ],
                    "duration": 1,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "TranslationServiceError axiosErr should have status code",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 1,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "axiosErr should have status code"
                },
                {
                    "ancestorTitles": [
                        "TranslationServiceError"
                    ],
                    "duration": 0,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "TranslationServiceError zodErr should exist",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 1,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "zodErr should exist"
                }
            ],
            "endTime": 1693732198864,
            "message": "",
            "name": "C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\src\\features\\translation\\tests\\translationServiceError.test.ts",
            "startTime": 1693732194999,
            "status": "passed",
            "summary": ""
        },
        {
            "assertionResults": [
                {
                    "ancestorTitles": [
                        "DirectoryTraverser",
                        "descendTo"
                    ],
                    "duration": 28,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "DirectoryTraverser descendTo should return true if folder is found",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 1,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should return true if folder is found"
                },
                {
                    "ancestorTitles": [
                        "DirectoryTraverser",
                        "descendTo"
                    ],
                    "duration": 19,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "DirectoryTraverser descendTo should throw if folder is not found",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 1,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should throw if folder is not found"
                },
                {
                    "ancestorTitles": [
                        "DirectoryTraverser",
                        "descendTo"
                    ],
                    "duration": 5,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "DirectoryTraverser descendTo should handle file types",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 1,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should handle file types"
                },
                {
                    "ancestorTitles": [
                        "DirectoryTraverser",
                        "recursiveFindFiles"
                    ],
                    "duration": 2,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "DirectoryTraverser recursiveFindFiles should find all files matching the filter",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 1,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should find all files matching the filter"
                },
                {
                    "ancestorTitles": [
                        "DirectoryTraverser",
                        "recursiveFindFiles"
                    ],
                    "duration": 3,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "DirectoryTraverser recursiveFindFiles should return an empty array if no files match the filter",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 1,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should return an empty array if no files match the filter"
                },
                {
                    "ancestorTitles": [
                        "DirectoryTraverser",
                        "ascendTo"
                    ],
                    "duration": 0,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "DirectoryTraverser ascendTo should change the current directory to the specified folder",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 1,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should change the current directory to the specified folder"
                },
                {
                    "ancestorTitles": [
                        "DirectoryTraverser",
                        "ascendTo"
                    ],
                    "duration": 1,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "DirectoryTraverser ascendTo should throw an error if the specified folder is not found",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 1,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should throw an error if the specified folder is not found"
                },
                {
                    "ancestorTitles": [
                        "DirectoryTraverser",
                        "currentDirectory"
                    ],
                    "duration": 0,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "DirectoryTraverser currentDirectory should set the current directory to the specified directory",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 1,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should set the current directory to the specified directory"
                },
                {
                    "ancestorTitles": [
                        "DirectoryTraverser",
                        "currentDirectory"
                    ],
                    "duration": 0,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "DirectoryTraverser currentDirectory should normalize the specified directory",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 1,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should normalize the specified directory"
                },
                {
                    "ancestorTitles": [
                        "DirectoryTraverser",
                        "currentDirectory"
                    ],
                    "duration": 1,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "DirectoryTraverser currentDirectory should set the current folder to the basename of the specified directory",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 1,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should set the current folder to the basename of the specified directory"
                },
                {
                    "ancestorTitles": [
                        "DirectoryTraverser",
                        "currentDirectory"
                    ],
                    "duration": 0,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "DirectoryTraverser currentDirectory should throw an error if the specified directory is invalid",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 1,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should throw an error if the specified directory is invalid"
                },
                {
                    "ancestorTitles": [
                        "DirectoryTraverser",
                        "goToDescendentFolder"
                    ],
                    "duration": 2,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "DirectoryTraverser goToDescendentFolder should return the path of the descendent folder",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 1,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should return the path of the descendent folder"
                },
                {
                    "ancestorTitles": [
                        "DirectoryTraverser",
                        "goToDescendentFolder"
                    ],
                    "duration": 6,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "DirectoryTraverser goToDescendentFolder should throw an error if the specified folder is not found",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 1,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should throw an error if the specified folder is not found"
                },
                {
                    "ancestorTitles": [
                        "DirectoryTraverser",
                        "goToDescendentFolder"
                    ],
                    "duration": 1,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "DirectoryTraverser goToDescendentFolder should throw an error if the starting directory does not exist",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 1,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should throw an error if the starting directory does not exist"
                }
            ],
            "endTime": 1693732198974,
            "message": "",
            "name": "C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\src\\features\\fileParsing\\tests\\traverser.test.ts",
            "startTime": 1693732195001,
            "status": "passed",
            "summary": ""
        },
        {
            "assertionResults": [],
            "coverage": {},
            "endTime": 1693732205506,
            "message": "  \u001b[1m● \u001b[22mTest suite failed to run\n\n    tsyringe requires a reflect polyfill. Please add 'import \"reflect-metadata\"' to the top of your entry point.\n\n    \u001b[0m \u001b[90m 1 |\u001b[39m \u001b[36mimport\u001b[39m { \u001b[33mTRANSLATION_MAX_USER_INPUT_CHARS\u001b[39m } \u001b[36mfrom\u001b[39m \u001b[32m\"../configs/languageConfig\"\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 2 |\u001b[39m \u001b[36mimport\u001b[39m { \u001b[33mTranslationService\u001b[39m } \u001b[36mfrom\u001b[39m \u001b[32m\"../services/translationService\"\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 3 |\u001b[39m \u001b[36mimport\u001b[39m { container } \u001b[36mfrom\u001b[39m \u001b[32m\"tsyringe\"\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m   |\u001b[39m \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 4 |\u001b[39m \u001b[36mimport\u001b[39m dotenv \u001b[36mfrom\u001b[39m \u001b[32m\"dotenv\"\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 5 |\u001b[39m \u001b[36mimport\u001b[39m { z } \u001b[36mfrom\u001b[39m \u001b[32m\"zod\"\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 6 |\u001b[39m\u001b[0m\n\n      \u001b[2mat Object.<anonymous> (\u001b[22mnode_modules/tsyringe/dist/cjs/index.js\u001b[2m:5:11)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[0m\u001b[36msrc/features/translation/tests/translationService.test.ts\u001b[39m\u001b[0m\u001b[2m:3:1)\u001b[22m\n",
            "name": "C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\src\\features\\translation\\tests\\translationService.test.ts",
            "startTime": 1693732205506,
            "status": "failed",
            "summary": ""
        },
        {
            "assertionResults": [
                {
                    "ancestorTitles": [
                        "country"
                    ],
                    "duration": 590,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "country should have return 10 records with take set to 10",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 2,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should have return 10 records with take set to 10"
                }
            ],
            "endTime": 1693732199390,
            "message": "",
            "name": "C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\src\\db\\tests\\prisma.test.ts",
            "startTime": 1693732195003,
            "status": "passed",
            "summary": ""
        },
        {
            "assertionResults": [
                {
                    "ancestorTitles": [
                        "reflection"
                    ],
                    "duration": 9,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "reflection should successfully resolve service dependency",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 1,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should successfully resolve service dependency"
                }
            ],
            "endTime": 1693732199732,
            "message": "",
            "name": "C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\src\\utils\\tests\\depTest.test.ts",
            "startTime": 1693732194967,
            "status": "passed",
            "summary": ""
        },
        {
            "assertionResults": [
                {
                    "ancestorTitles": [
                        "Language Abbreviation Queries"
                    ],
                    "duration": 501,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "Language Abbreviation Queries should return a truthy value when searched by country name (optimized)",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 1,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should return a truthy value when searched by country name (optimized)"
                },
                {
                    "ancestorTitles": [
                        "Language Abbreviation Queries"
                    ],
                    "duration": 82,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "Language Abbreviation Queries should return a truthy value when searched by country name",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 1,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should return a truthy value when searched by country name"
                },
                {
                    "ancestorTitles": [
                        "Language Abbreviation Queries"
                    ],
                    "duration": 85,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "Language Abbreviation Queries should return a truthy value when searched by language name",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 1,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should return a truthy value when searched by language name"
                },
                {
                    "ancestorTitles": [
                        "Language Abbreviation Queries"
                    ],
                    "duration": 79,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "Language Abbreviation Queries should return a truthy value when searched by abbreviation",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 1,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should return a truthy value when searched by abbreviation"
                },
                {
                    "ancestorTitles": [
                        "Language Abbreviation Queries"
                    ],
                    "duration": 85,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "Language Abbreviation Queries should return a truthy value when searched by emoji",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 1,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should return a truthy value when searched by emoji"
                },
                {
                    "ancestorTitles": [
                        "Language Abbreviation Queries (Case Insensitive)"
                    ],
                    "duration": 40,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "Language Abbreviation Queries (Case Insensitive) should return a truthy value when searched by country name (optimized)",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 1,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should return a truthy value when searched by country name (optimized)"
                },
                {
                    "ancestorTitles": [
                        "Language Abbreviation Queries (Case Insensitive)"
                    ],
                    "duration": 46,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "Language Abbreviation Queries (Case Insensitive) should return a truthy value when searched by country name",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 1,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should return a truthy value when searched by country name"
                },
                {
                    "ancestorTitles": [
                        "Language Abbreviation Queries (Case Insensitive)"
                    ],
                    "duration": 40,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "Language Abbreviation Queries (Case Insensitive) should return a truthy value when searched by language name",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 1,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should return a truthy value when searched by language name"
                },
                {
                    "ancestorTitles": [
                        "Language Abbreviation Queries (Case Insensitive)"
                    ],
                    "duration": 41,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "Language Abbreviation Queries (Case Insensitive) should return a truthy value when searched by abbreviation",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 1,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should return a truthy value when searched by abbreviation"
                },
                {
                    "ancestorTitles": [
                        "Language Abbreviation Queries (Case Insensitive)"
                    ],
                    "duration": 42,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "Language Abbreviation Queries (Case Insensitive) should return a truthy value when searched by emoji",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 1,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should return a truthy value when searched by emoji"
                }
            ],
            "endTime": 1693732199963,
            "message": "",
            "name": "C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\src\\features\\translation\\tests\\languageRepository.test.ts",
            "startTime": 1693732195012,
            "status": "passed",
            "summary": ""
        },
        {
            "assertionResults": [
                {
                    "ancestorTitles": [
                        "kitchen sink test"
                    ],
                    "duration": 28,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "kitchen sink test see comments in test",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 5,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "see comments in test"
                },
                {
                    "ancestorTitles": [
                        "CooldownService",
                        "registerCommandCooldown"
                    ],
                    "duration": 1,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "CooldownService registerCommandCooldown should register the cooldown for a command",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 1,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should register the cooldown for a command"
                },
                {
                    "ancestorTitles": [
                        "CooldownService",
                        "processUserCooldown"
                    ],
                    "duration": 2,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "CooldownService processUserCooldown should return CooldownResult.asExpired() if the user is not on cooldown",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 1,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should return CooldownResult.asExpired() if the user is not on cooldown"
                },
                {
                    "ancestorTitles": [
                        "CooldownService",
                        "processUserCooldown"
                    ],
                    "duration": 3,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "CooldownService processUserCooldown should return the remaining cooldown time in seconds if the user is on cooldown",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 1,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should return the remaining cooldown time in seconds if the user is on cooldown"
                },
                {
                    "ancestorTitles": [
                        "CooldownService",
                        "getUsersOnCooldownForCommand"
                    ],
                    "duration": 1,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "CooldownService getUsersOnCooldownForCommand should return the cooldown events for a command",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 1,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should return the cooldown events for a command"
                }
            ],
            "endTime": 1693732200433,
            "message": "",
            "name": "C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\src\\features\\cooldowns\\tests\\cooldownService.test.ts",
            "startTime": 1693732195013,
            "status": "passed",
            "summary": ""
        },
        {
            "assertionResults": [],
            "coverage": {},
            "endTime": 1693732205506,
            "message": "  \u001b[1m● \u001b[22mTest suite failed to run\n\n    Jest worker encountered 4 child process exceptions, exceeding retry limit\n\n      \u001b[2mat ChildProcessWorker.initialize (\u001b[22mnode_modules/jest-worker/build/workers/ChildProcessWorker.js\u001b[2m:181:21)\u001b[22m\n",
            "name": "C:\\Users\\PCS\\Documents\\repos\\my-sapphire-bot-complete\\src\\features\\fileParsing\\tests\\fileParsingService.test.ts",
            "startTime": 1693732205506,
            "status": "failed",
            "summary": ""
        }
    ],
    "wasInterrupted": false
}